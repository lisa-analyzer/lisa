{"name":"untyped tests::main(tests* this)","description":null,"nodes":[{"id":0,"subNodes":[1,2],"text":"a = new A()"},{"id":1,"text":"a"},{"id":2,"text":"new A()"},{"id":3,"subNodes":[4,5],"text":"one = 1"},{"id":4,"text":"one"},{"id":5,"text":"1"},{"id":6,"subNodes":[7,8],"text":"positive = identity(a, one)"},{"id":7,"text":"positive"},{"id":8,"subNodes":[9,10],"text":"identity(a, one)"},{"id":9,"text":"a"},{"id":10,"text":"one"},{"id":11,"subNodes":[12,13],"text":"minusone = -1"},{"id":12,"text":"minusone"},{"id":13,"text":"-1"},{"id":14,"subNodes":[15,16],"text":"negative = identity(a, minusone)"},{"id":15,"text":"negative"},{"id":16,"subNodes":[17,18],"text":"identity(a, minusone)"},{"id":17,"text":"a"},{"id":18,"text":"minusone"},{"id":19,"subNodes":[20,21],"text":"top = helper(this, one, a)"},{"id":20,"text":"top"},{"id":21,"subNodes":[22,23,24],"text":"helper(this, one, a)"},{"id":22,"text":"this"},{"id":23,"text":"one"},{"id":24,"text":"a"},{"id":25,"text":"ret"}],"edges":[{"sourceId":0,"destId":3,"kind":"SequentialEdge"},{"sourceId":3,"destId":6,"kind":"SequentialEdge"},{"sourceId":6,"destId":11,"kind":"SequentialEdge"},{"sourceId":11,"destId":14,"kind":"SequentialEdge"},{"sourceId":14,"destId":19,"kind":"SequentialEdge"},{"sourceId":19,"destId":25,"kind":"SequentialEdge"}],"descriptions":[{"nodeId":0,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"this":["tests*"]},"value":"#TOP#"}}},{"nodeId":1,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"heap[w]:heap":["A"],"this":["tests*"]},"value":"#TOP#"}}},{"nodeId":2,"description":{"expressions":["ref$new A"],"state":{"heap":"monolith","type":{"heap[w]:heap":["A"],"this":["tests*"]},"value":"#TOP#"}}},{"nodeId":3,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"value":{"one":"+"}}}},{"nodeId":4,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"this":["tests*"]},"value":"#TOP#"}}},{"nodeId":5,"description":{"expressions":["1"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"this":["tests*"]},"value":"#TOP#"}}},{"nodeId":6,"description":{"expressions":["positive"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"one":"+","positive":"+"}}}},{"nodeId":7,"description":{"expressions":["positive"],"state":{"heap":"monolith","type":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':26:37":["int32"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"value":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':26:37":"+","one":"+"}}}},{"nodeId":8,"description":{"expressions":["call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':26:37"],"state":{"heap":"monolith","type":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':26:37":["int32"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"value":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':26:37":"+","one":"+"}}}},{"nodeId":9,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"value":{"one":"+"}}}},{"nodeId":10,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"this":["tests*"]},"value":{"one":"+"}}}},{"nodeId":11,"description":{"expressions":["minusone"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","one":"+","positive":"+"}}}},{"nodeId":12,"description":{"expressions":["minusone"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"one":"+","positive":"+"}}}},{"nodeId":13,"description":{"expressions":["-1"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"one":"+","positive":"+"}}}},{"nodeId":14,"description":{"expressions":["negative"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","negative":"-","one":"+","positive":"+"}}}},{"nodeId":15,"description":{"expressions":["negative"],"state":{"heap":"monolith","type":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':28:42":["int32"],"heap[w]:heap":["A"],"minusone":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':28:42":"-","minusone":"-","one":"+","positive":"+"}}}},{"nodeId":16,"description":{"expressions":["call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':28:42"],"state":{"heap":"monolith","type":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':28:42":["int32"],"heap[w]:heap":["A"],"minusone":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':28:42":"-","minusone":"-","one":"+","positive":"+"}}}},{"nodeId":17,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","one":"+","positive":"+"}}}},{"nodeId":18,"description":{"expressions":["minusone"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","one":"+","positive":"+"}}}},{"nodeId":19,"description":{"expressions":["top"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"],"top":["int32"]},"value":{"minusone":"-","negative":"-","one":"+","positive":"+","top":"+"}}}},{"nodeId":20,"description":{"expressions":["top"],"state":{"heap":"monolith","type":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':29:36":["int32"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':29:36":"+","minusone":"-","negative":"-","one":"+","positive":"+"}}}},{"nodeId":21,"description":{"expressions":["call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':29:36"],"state":{"heap":"monolith","type":{"a":["A*"],"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':29:36":["int32"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"call_ret_value@'imp-testcases/interprocedural/programContextSensitive2.imp':29:36":"+","minusone":"-","negative":"-","one":"+","positive":"+"}}}},{"nodeId":22,"description":{"expressions":["this"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","negative":"-","one":"+","positive":"+"}}}},{"nodeId":23,"description":{"expressions":["one"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","negative":"-","one":"+","positive":"+"}}}},{"nodeId":24,"description":{"expressions":["a"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"]},"value":{"minusone":"-","negative":"-","one":"+","positive":"+"}}}},{"nodeId":25,"description":{"expressions":["skip"],"state":{"heap":"monolith","type":{"a":["A*"],"heap[w]:heap":["A"],"minusone":["int32"],"negative":["int32"],"one":["int32"],"positive":["int32"],"this":["tests*"],"top":["int32"]},"value":{"minusone":"-","negative":"-","one":"+","positive":"+","top":"+"}}}}]}