digraph "untyped A::identity(A* this, untyped i)" {
edge ["dir"="forward"]
graph ["label"="untyped A::identity(A* this, untyped i)","labelloc"="t"]
"node0" ["label"=<i3 = 1<br/><br/>{ expressions: [i3],<br/>state: { heap: monolith,<br/>type: { ['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:minusone: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:negative: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:one: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:positive: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:dispatcher: #TOP#,<br/>['imp-testcases/visualization/visualization.imp':38:36]:i: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:this: #TOP#,<br/>i: [int32],<br/>i3: [int32],<br/>this: #TOP# },<br/>value: { ['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:minusone: [-1, -1],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:negative: [-1, -1],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:one: [10, 10],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:positive: [10, 10],<br/>['imp-testcases/visualization/visualization.imp':38:36]:dispatcher: [-Inf, +Inf],<br/>['imp-testcases/visualization/visualization.imp':38:36]:i: [10, 10],<br/>['imp-testcases/visualization/visualization.imp':38:36]:this: [-Inf, +Inf],<br/>i: [10, 10],<br/>i3: [1, 1],<br/>this: [-Inf, +Inf] }<br/> }<br/> }<br/>>,"shape"="rect","id"="node0","color"="black","style"="dashed"]
"node3" ["label"=<return i<br/><br/>{ expressions: [ret_value@identity],<br/>state: { heap: monolith,<br/>type: { ['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:minusone: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:negative: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:one: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:positive: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:dispatcher: #TOP#,<br/>['imp-testcases/visualization/visualization.imp':38:36]:i: [int32],<br/>['imp-testcases/visualization/visualization.imp':38:36]:this: #TOP#,<br/>i: [int32],<br/>i3: [int32],<br/>ret_value@identity: [int32],<br/>this: #TOP# },<br/>value: { ['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:minusone: [-1, -1],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:negative: [-1, -1],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:one: [10, 10],<br/>['imp-testcases/visualization/visualization.imp':38:36]:['imp-testcases/visualization/visualization.imp':34:36]:positive: [10, 10],<br/>['imp-testcases/visualization/visualization.imp':38:36]:dispatcher: [-Inf, +Inf],<br/>['imp-testcases/visualization/visualization.imp':38:36]:i: [10, 10],<br/>['imp-testcases/visualization/visualization.imp':38:36]:this: [-Inf, +Inf],<br/>i: [10, 10],<br/>i3: [1, 1],<br/>ret_value@identity: [10, 10],<br/>this: [-Inf, +Inf] }<br/> }<br/> }<br/>>,"shape"="rect","id"="node3","color"="black"]
subgraph "cluster_legend" {
edge ["dir"="none"]
graph ["label"=<Legend>,"style"="dotted"]
"legend" ["label"=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, dashed</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>,"shape"="none"]
}
"node0" -> "node3" ["color"="black"]
}